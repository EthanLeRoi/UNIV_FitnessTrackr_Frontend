{"ast":null,"code":"var _jsxFileName = \"/Users/jaesmacbook/Desktop/Fullstack_work/fitnessProject/UNIV_FitnessTrackr_Frontend/src/components/EditRoutine.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updateRoutines } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRoutine = _ref => {\n  _s();\n  let {\n    routines,\n    token\n  } = _ref;\n  const {\n    routineID\n  } = useParams();\n  const [currentRoutine] = routines.filter(routine => routine._id === routineID);\n  const {\n    title,\n    name,\n    goal,\n    isPublic\n  } = currentRoutine;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newGoal, setNewGoal] = useState(goal);\n  const [newName, setNewName] = useState(name);\n  const [newIsPublic, setNewIsPublic] = useState(isPublic);\n  async function editRoutine() {\n    const updatedRoutine = {\n      token: token,\n      title: newTitle,\n      name: newName,\n      goal: newGoal,\n      isPublic: newIsPublic,\n      _id: routineID\n    };\n    await updateRoutine(updatedRoutine);\n  }\n\n  //   async function handleDelete() {\n  //     await deleteRoutine(token, currentRoutine._id);\n  //     fetchRoutines();\n  //     alert('Your routine was successfully deleted!')\n  //     navigate('/routines')\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"editForm\",\n    onSubmit: ev => {\n      ev.preventDefault();\n      editRoutine();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"editTitle\",\n      type: \"text\",\n      placeholder: title,\n      onChange: ev => setNewTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"editName\",\n      type: \"text\",\n      placeholder: name,\n      onChange: ev => setNewName(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"editGoal\",\n      type: \"text\",\n      placeholder: goal,\n      onChange: ev => setNewGoal(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"newisPublic\",\n      type: \"text\",\n      checked: newIsPublic,\n      onChange: ev => setNewIsPublic(ev.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      variant: \"contained\",\n      type: \"submit\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRoutine, \"s4L1y67OCu1+i3XnjgWZov4l84Y=\", false, function () {\n  return [useParams];\n});\n_c = EditRoutine;\nexport default EditRoutine;\nvar _c;\n$RefreshReg$(_c, \"EditRoutine\");","map":{"version":3,"names":["React","useState","useParams","updateRoutines","EditRoutine","routines","token","routineID","currentRoutine","filter","routine","_id","title","name","goal","isPublic","newTitle","setNewTitle","newGoal","setNewGoal","newName","setNewName","newIsPublic","setNewIsPublic","editRoutine","updatedRoutine","updateRoutine","ev","preventDefault","target","value","checked"],"sources":["/Users/jaesmacbook/Desktop/Fullstack_work/fitnessProject/UNIV_FitnessTrackr_Frontend/src/components/EditRoutine.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updateRoutines} from '../api';\n\n\nconst EditRoutine = ({ routines, token }) => {\n  const { routineID } = useParams();\n  \n  const [currentRoutine] = routines.filter(routine => routine._id === routineID);\n  \n  const {title, name, goal, isPublic} = currentRoutine;\n  \n  const [newTitle, setNewTitle] = useState(title);\n  const [newGoal, setNewGoal] = useState(goal);\n  const [newName, setNewName] = useState(name);\n  const [newIsPublic, setNewIsPublic] = useState(isPublic);\n  \n  async function editRoutine() {\n    const updatedRoutine = {\n      token: token,\n      title: newTitle,\n      name: newName,\n    goal: newGoal,\n    isPublic: newIsPublic,\n    _id: routineID\n    }\n    await updateRoutine(updatedRoutine)\n  }\n  \n//   async function handleDelete() {\n//     await deleteRoutine(token, currentRoutine._id);\n//     fetchRoutines();\n//     alert('Your routine was successfully deleted!')\n//     navigate('/routines')\n//   }\n  \n  return (\n    <form className='editForm' onSubmit={ (ev) => {\n      ev.preventDefault();\n      editRoutine();\n      \n    }}>\n      <input className='editTitle'\n        type='text'\n        placeholder={title}\n        onChange={(ev) => setNewTitle(ev.target.value)}\n      />\n    \n     \n\n      <input className='editName'\n        type='text'\n        placeholder={name}\n        onChange={(ev) => setNewName(ev.target.value)}\n      />\n\n  \n\n      <input className='editGoal'\n        type='text'\n        placeholder={goal}\n        onChange={(ev) => setNewGoal(ev.target.value)}\n      />\n\n      <input className='newisPublic'\n        type='text'\n        checked={newIsPublic}\n        onChange={(ev) => setNewIsPublic(ev.target.checked)}\n      />\n  \n\n  <button variant=\"contained\" type=\"submit\">Edit Post</button>\n              \n    </form>\n  )\n}\n\nexport default EditRoutine;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAO,QAAQ;AAAC;AAGvC,MAAMC,WAAW,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAAEC,QAAQ;IAAEC;EAAM,CAAC;EACtC,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,EAAE;EAEjC,MAAM,CAACM,cAAc,CAAC,GAAGH,QAAQ,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKJ,SAAS,CAAC;EAE9E,MAAM;IAACK,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,cAAc;EAEpD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACW,KAAK,CAAC;EAC/C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAACa,IAAI,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAACY,IAAI,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAACc,QAAQ,CAAC;EAExD,eAAeS,WAAW,GAAG;IAC3B,MAAMC,cAAc,GAAG;MACrBnB,KAAK,EAAEA,KAAK;MACZM,KAAK,EAAEI,QAAQ;MACfH,IAAI,EAAEO,OAAO;MACfN,IAAI,EAAEI,OAAO;MACbH,QAAQ,EAAEO,WAAW;MACrBX,GAAG,EAAEJ;IACL,CAAC;IACD,MAAMmB,aAAa,CAACD,cAAc,CAAC;EACrC;;EAEF;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACE;IAAM,SAAS,EAAC,UAAU;IAAC,QAAQ,EAAIE,EAAE,IAAK;MAC5CA,EAAE,CAACC,cAAc,EAAE;MACnBJ,WAAW,EAAE;IAEf,CAAE;IAAA,wBACA;MAAO,SAAS,EAAC,WAAW;MAC1B,IAAI,EAAC,MAAM;MACX,WAAW,EAAEZ,KAAM;MACnB,QAAQ,EAAGe,EAAE,IAAKV,WAAW,CAACU,EAAE,CAACE,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C,eAIF;MAAO,SAAS,EAAC,UAAU;MACzB,IAAI,EAAC,MAAM;MACX,WAAW,EAAEjB,IAAK;MAClB,QAAQ,EAAGc,EAAE,IAAKN,UAAU,CAACM,EAAE,CAACE,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C,eAIF;MAAO,SAAS,EAAC,UAAU;MACzB,IAAI,EAAC,MAAM;MACX,WAAW,EAAEhB,IAAK;MAClB,QAAQ,EAAGa,EAAE,IAAKR,UAAU,CAACQ,EAAE,CAACE,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C,eAEF;MAAO,SAAS,EAAC,aAAa;MAC5B,IAAI,EAAC,MAAM;MACX,OAAO,EAAER,WAAY;MACrB,QAAQ,EAAGK,EAAE,IAAKJ,cAAc,CAACI,EAAE,CAACE,MAAM,CAACE,OAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACpD,eAGN;MAAQ,OAAO,EAAC,WAAW;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEnD;AAEX,CAAC;AAAA,GAtEK3B,WAAW;EAAA,QACOF,SAAS;AAAA;AAAA,KAD3BE,WAAW;AAwEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
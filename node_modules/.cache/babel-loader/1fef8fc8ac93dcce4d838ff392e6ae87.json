{"ast":null,"code":"var _jsxFileName = \"/Users/jaesmacbook/Desktop/Fullstack_work/fitnessProject/UNIV_FitnessTrackr_Frontend/src/components/Routines.js\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routines = _ref => {\n  _s();\n  let {\n    routines\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  function routineMatches(routine, string) {\n    const {\n      title,\n      goal\n    } = routine;\n    if (title.toLowerCase().includes(string.toLowerCase()) || goal.toLowerCase().includes(string.toLowerCase())) {\n      return post;\n    }\n    // return true if any of the fields you want to check against include the text\n    // strings have an .includes() method \n  }\n\n  const filteredPosts = routines.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerDiv\",\n    id: \"outer div element\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchedPost\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          placeholder: \"Search\",\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"Search\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this), postsToDisplay.map(post => {\n      const {\n        description,\n        location,\n        price,\n        title,\n        _id,\n        isAuthor\n      } = post;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postHolder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"postTitle\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postDescription\",\n          children: [\"Description: \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postPrice\",\n          children: [\"Price: \", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postLocation\",\n          children: [\"Location: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"isAuthor\",\n            children: \"Is Author \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/edit-post/${_id}`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            class: \"ViewButton\",\n            to: `/posts/${_id}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Routines, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = Routines;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"names":["Button","TextField","React","useState","Link","Routines","routines","searchTerm","setSearchTerm","routineMatches","routine","string","title","goal","toLowerCase","includes","post","filteredPosts","filter","postMatches","postsToDisplay","length","posts","event","preventDefault","target","value","map","description","location","price","_id","isAuthor","Posts"],"sources":["/Users/jaesmacbook/Desktop/Fullstack_work/fitnessProject/UNIV_FitnessTrackr_Frontend/src/components/Routines.js"],"sourcesContent":["\r\nimport { Button, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Routines = ({ routines }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n \r\n  function routineMatches(routine, string) {\r\n      const{ title, goal} = routine;\r\n  \r\n      if (title.toLowerCase().includes(string.toLowerCase()) || goal.toLowerCase().includes(string.toLowerCase())) {\r\n          return post;\r\n      }\r\n    // return true if any of the fields you want to check against include the text\r\n    // strings have an .includes() method \r\n  }\r\n  \r\n  const filteredPosts = routines.filter(post => postMatches(post, searchTerm));\r\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\r\n\r\n  return (\r\n    <div className='outerDiv' id='outer div element'>\r\n       <div className='searchedPost'>\r\n          <form onSubmit={(event) => {\r\n              event.preventDefault();\r\n          }}> \r\n            <TextField\r\n             type = 'text'\r\n             placeholder = 'Search'\r\n             onChange = {(event) => setSearchTerm(event.target.value)}\r\n            ></TextField>\r\n            <Button type='Search'>Search</Button>\r\n            \r\n           </form>  \r\n          </div>\r\n    {\r\n      postsToDisplay.map((post) => {\r\n        const {description, location, price, title, _id, isAuthor } = post;\r\n        return (\r\n          <div className='postHolder' key={_id}>\r\n            <h3 className='postTitle'>{title}</h3>\r\n            <p className='postDescription'>Description: {description}</p>\r\n            <p className='postPrice'>Price: {price}</p>\r\n            <p className='postLocation'>Location: {location}</p>\r\n            {\r\n              isAuthor ? (\r\n            \r\n                <button>\r\n                  <p className='isAuthor'>Is Author </p>\r\n\r\n                  <Link to={`/posts/edit-post/${_id}`}>Edit</Link>\r\n                  \r\n                </button>\r\n              ) : (\r\n                \r\n                <button>\r\n                  <Link class=\"ViewButton\" to={`/posts/${_id}` }>View</Link>\r\n                \r\n                </button>\r\n              \r\n              )\r\n              \r\n            }\r\n          </div>\r\n         \r\n        )\r\n      })\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}